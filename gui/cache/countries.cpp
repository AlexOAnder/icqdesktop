#include "stdafx.h"
#include "countries.h"

namespace Ui
{
	namespace countries
	{
		countries_list countries_;

		void init(countries_list& countries_)
		{
			countries_.reserve(250);
            countries_.emplace_back(1, QT_TRANSLATE_NOOP("countries", "Canada"), "ca");
            countries_.emplace_back(1, QT_TRANSLATE_NOOP("countries", "Dominican Republic"), "do");
            countries_.emplace_back(1, QT_TRANSLATE_NOOP("countries", "Puerto Rico"), "pr");
			countries_.emplace_back(1, QT_TRANSLATE_NOOP("countries", "USA"), "us");
            countries_.emplace_back(1242, QT_TRANSLATE_NOOP("countries", "Bahamas"), "bs");
            countries_.emplace_back(1246, QT_TRANSLATE_NOOP("countries", "Barbados"), "bb");
			countries_.emplace_back(1264, QT_TRANSLATE_NOOP("countries", "Anguilla"), "ai");
			countries_.emplace_back(1268, QT_TRANSLATE_NOOP("countries", "Antigua and Barbuda"), "ag");
            countries_.emplace_back(1284, QT_TRANSLATE_NOOP("countries", "British Virgin Islands"), "vg");
            countries_.emplace_back(1340, QT_TRANSLATE_NOOP("countries", "US Virgin Islands"), "vi");
			countries_.emplace_back(1345, QT_TRANSLATE_NOOP("countries", "Cayman Islands"), "ky");
            countries_.emplace_back(1441, QT_TRANSLATE_NOOP("countries", "Bermuda"), "bm");
            countries_.emplace_back(1473, QT_TRANSLATE_NOOP("countries", "Grenada"), "gd");
            countries_.emplace_back(1649, QT_TRANSLATE_NOOP("countries", "Turks and Caicos Islands"), "tc");
			countries_.emplace_back(1664, QT_TRANSLATE_NOOP("countries", "Montserrat"), "ms");
            countries_.emplace_back(1671, QT_TRANSLATE_NOOP("countries", "Guam, US Territory of"), "gu");
            countries_.emplace_back(1684, QT_TRANSLATE_NOOP("countries", "American Samoa"), "as");
            countries_.emplace_back(1670, QT_TRANSLATE_NOOP("countries", "Northern Mariana Islands"), "mp");
            countries_.emplace_back(1758, QT_TRANSLATE_NOOP("countries", "Saint Lucia"), "lc");
            countries_.emplace_back(1767, QT_TRANSLATE_NOOP("countries", "Dominica"), "dm");
            countries_.emplace_back(1784, QT_TRANSLATE_NOOP("countries", "Saint Vincent and the Grenadines"), "vc");
            countries_.emplace_back(1869, QT_TRANSLATE_NOOP("countries", "Saint Kitts and Nevis"), "kn");
            countries_.emplace_back(1876, QT_TRANSLATE_NOOP("countries", "Jamaica"), "jm");
			countries_.emplace_back(1868, QT_TRANSLATE_NOOP("countries", "Trinidad and Tobago"), "tt");
			countries_.emplace_back(20, QT_TRANSLATE_NOOP("countries", "Egypt"), "eg");
			countries_.emplace_back(212, QT_TRANSLATE_NOOP("countries", "Morocco"), "ma");
			countries_.emplace_back(213, QT_TRANSLATE_NOOP("countries", "Algeria"), "dz");
			countries_.emplace_back(216, QT_TRANSLATE_NOOP("countries", "Tunisia"), "tn");
			countries_.emplace_back(218, QT_TRANSLATE_NOOP("countries", "Libya"), "ly");
			countries_.emplace_back(220, QT_TRANSLATE_NOOP("countries", "Gambia"), "gm");
			countries_.emplace_back(221, QT_TRANSLATE_NOOP("countries", "Senegal"), "sn");
			countries_.emplace_back(222, QT_TRANSLATE_NOOP("countries", "Mauritania"), "mr");
			countries_.emplace_back(223, QT_TRANSLATE_NOOP("countries", "Mali"), "ml");
			countries_.emplace_back(224, QT_TRANSLATE_NOOP("countries", "Guinea"), "gn");
            countries_.emplace_back(225, QT_TRANSLATE_NOOP("countries", "Cote d'Ivoire"), "ci");
			countries_.emplace_back(226, QT_TRANSLATE_NOOP("countries", "Burkina Faso"), "bf");
			countries_.emplace_back(227, QT_TRANSLATE_NOOP("countries", "Niger"), "ne");
			countries_.emplace_back(228, QT_TRANSLATE_NOOP("countries", "Togo"), "tg");
			countries_.emplace_back(229, QT_TRANSLATE_NOOP("countries", "Benin"), "bj");
			countries_.emplace_back(230, QT_TRANSLATE_NOOP("countries", "Mauritius"), "mu");
			countries_.emplace_back(231, QT_TRANSLATE_NOOP("countries", "Liberia"), "lr");
			countries_.emplace_back(232, QT_TRANSLATE_NOOP("countries", "Sierra Leone"), "sl");
			countries_.emplace_back(233, QT_TRANSLATE_NOOP("countries", "Ghana"), "gh");
			countries_.emplace_back(234, QT_TRANSLATE_NOOP("countries", "Nigeria"), "ng");
			countries_.emplace_back(235, QT_TRANSLATE_NOOP("countries", "Chad"), "td");
			countries_.emplace_back(236, QT_TRANSLATE_NOOP("countries", "Central African Republic"), "cf");
			countries_.emplace_back(237, QT_TRANSLATE_NOOP("countries", "Cameroon"), "cm");
			countries_.emplace_back(238, QT_TRANSLATE_NOOP("countries", "Cape Verde Islands"), "cv");
            countries_.emplace_back(239, QT_TRANSLATE_NOOP("countries", "Sao Tome &amp; Principe"), "st");
			countries_.emplace_back(240, QT_TRANSLATE_NOOP("countries", "Equatorial Guinea"), "gq");
			countries_.emplace_back(241, QT_TRANSLATE_NOOP("countries", "Gabon"), "ga");
			countries_.emplace_back(242, QT_TRANSLATE_NOOP("countries", "Congo, Republic of"), "cg");
			countries_.emplace_back(243, QT_TRANSLATE_NOOP("countries", "Congo, Democratic Republic of"), "cd");
			countries_.emplace_back(244, QT_TRANSLATE_NOOP("countries", "Angola"), "ao");
            countries_.emplace_back(245, QT_TRANSLATE_NOOP("countries", "Guinea-Bissau"), "gw");
			countries_.emplace_back(246, QT_TRANSLATE_NOOP("countries", "Diego Garcia"), "dg");
			countries_.emplace_back(247, QT_TRANSLATE_NOOP("countries", "Ascension Island"), "sh");
			countries_.emplace_back(248, QT_TRANSLATE_NOOP("countries", "Seychelles"), "sc");
			countries_.emplace_back(249, QT_TRANSLATE_NOOP("countries", "Sudan"), "sd");
			countries_.emplace_back(250, QT_TRANSLATE_NOOP("countries", "Rwanda"), "rw");
			countries_.emplace_back(251, QT_TRANSLATE_NOOP("countries", "Ethiopia"), "et");
			countries_.emplace_back(252, QT_TRANSLATE_NOOP("countries", "Somalia"), "so");
			countries_.emplace_back(253, QT_TRANSLATE_NOOP("countries", "Djibouti"), "dj");
			countries_.emplace_back(254, QT_TRANSLATE_NOOP("countries", "Kenya"), "ke");
			countries_.emplace_back(255, QT_TRANSLATE_NOOP("countries", "Tanzania, United Republic of"), "tz");
			countries_.emplace_back(256, QT_TRANSLATE_NOOP("countries", "Uganda"), "ug");
			countries_.emplace_back(257, QT_TRANSLATE_NOOP("countries", "Burundi"), "bi");
			countries_.emplace_back(258, QT_TRANSLATE_NOOP("countries", "Mozambique"), "mz");
			countries_.emplace_back(260, QT_TRANSLATE_NOOP("countries", "Zambia"), "zm");
			countries_.emplace_back(261, QT_TRANSLATE_NOOP("countries", "Madagascar"), "mg");
			countries_.emplace_back(262, QT_TRANSLATE_NOOP("countries", "Reunion Island"), "xri");
			countries_.emplace_back(263, QT_TRANSLATE_NOOP("countries", "Zimbabwe"), "zw");
			countries_.emplace_back(264, QT_TRANSLATE_NOOP("countries", "Namibia"), "na");
			countries_.emplace_back(265, QT_TRANSLATE_NOOP("countries", "Malawi"), "mw");
			countries_.emplace_back(266, QT_TRANSLATE_NOOP("countries", "Lesotho"), "ls");
			countries_.emplace_back(267, QT_TRANSLATE_NOOP("countries", "Botswana"), "bw");
			countries_.emplace_back(268, QT_TRANSLATE_NOOP("countries", "Swaziland"), "sz");
			countries_.emplace_back(262, QT_TRANSLATE_NOOP("countries", "Mayotte Island"), "yt");
			countries_.emplace_back(269, QT_TRANSLATE_NOOP("countries", "Comoros"), "km");
			countries_.emplace_back(27, QT_TRANSLATE_NOOP("countries", "South Africa"), "za");
            countries_.emplace_back(290, QT_TRANSLATE_NOOP("countries", "Saint Helena"), "sh");
			countries_.emplace_back(291, QT_TRANSLATE_NOOP("countries", "Eritrea"), "er");
			countries_.emplace_back(297, QT_TRANSLATE_NOOP("countries", "Aruba"), "aw");
			countries_.emplace_back(298, QT_TRANSLATE_NOOP("countries", "Faeroe Islands"), "fo");
			countries_.emplace_back(299, QT_TRANSLATE_NOOP("countries", "Greenland"), "gl");
			countries_.emplace_back(30, QT_TRANSLATE_NOOP("countries", "Greece"), "gr");
			countries_.emplace_back(31, QT_TRANSLATE_NOOP("countries", "Netherlands"), "nl");
			countries_.emplace_back(32, QT_TRANSLATE_NOOP("countries", "Belgium"), "be");
			countries_.emplace_back(33, QT_TRANSLATE_NOOP("countries", "France"), "fr");
			countries_.emplace_back(34, QT_TRANSLATE_NOOP("countries", "Spain"), "es");
			countries_.emplace_back(350, QT_TRANSLATE_NOOP("countries", "Gibraltar"), "gi");
			countries_.emplace_back(351, QT_TRANSLATE_NOOP("countries", "Portugal"), "pt");
			countries_.emplace_back(352, QT_TRANSLATE_NOOP("countries", "Luxembourg"), "lu");
			countries_.emplace_back(353, QT_TRANSLATE_NOOP("countries", "Ireland"), "ie");
			countries_.emplace_back(354, QT_TRANSLATE_NOOP("countries", "Iceland"), "is");
			countries_.emplace_back(355, QT_TRANSLATE_NOOP("countries", "Albania"), "al");
			countries_.emplace_back(356, QT_TRANSLATE_NOOP("countries", "Malta"), "mt");
			countries_.emplace_back(357, QT_TRANSLATE_NOOP("countries", "Cyprus"), "cy");
			countries_.emplace_back(358, QT_TRANSLATE_NOOP("countries", "Finland"), "fi");
			countries_.emplace_back(359, QT_TRANSLATE_NOOP("countries", "Bulgaria"), "bg");
			countries_.emplace_back(36, QT_TRANSLATE_NOOP("countries", "Hungary"), "hu");
			countries_.emplace_back(370, QT_TRANSLATE_NOOP("countries", "Lithuania"), "lt");
			countries_.emplace_back(371, QT_TRANSLATE_NOOP("countries", "Latvia"), "lv");
			countries_.emplace_back(372, QT_TRANSLATE_NOOP("countries", "Estonia"), "ee");
			countries_.emplace_back(373, QT_TRANSLATE_NOOP("countries", "Moldova, Republic of"), "md");
			countries_.emplace_back(374, QT_TRANSLATE_NOOP("countries", "Armenia"), "am");
			countries_.emplace_back(375, QT_TRANSLATE_NOOP("countries", "Belarus"), "by");
			countries_.emplace_back(376, QT_TRANSLATE_NOOP("countries", "Andorra"), "ad");
			countries_.emplace_back(377, QT_TRANSLATE_NOOP("countries", "Monaco"), "mc");
			countries_.emplace_back(378, QT_TRANSLATE_NOOP("countries", "San Marino"), "sm");
			countries_.emplace_back(379, QT_TRANSLATE_NOOP("countries", "Vatican City"), "va");
			countries_.emplace_back(380, QT_TRANSLATE_NOOP("countries", "Ukraine"), "ua");
            countries_.emplace_back(381, QT_TRANSLATE_NOOP("countries", "Serbia"), "rs");
            countries_.emplace_back(382, QT_TRANSLATE_NOOP("countries", "Montenegro"), "me");
			countries_.emplace_back(385, QT_TRANSLATE_NOOP("countries", "Croatia"), "hr");
			countries_.emplace_back(386, QT_TRANSLATE_NOOP("countries", "Slovenia"), "si");
			countries_.emplace_back(387, QT_TRANSLATE_NOOP("countries", "Bosnia and Herzegovina"), "ba");
            countries_.emplace_back(389, QT_TRANSLATE_NOOP("countries", "Macedonia (F.Y.R.O.M.)"), "mk");
			countries_.emplace_back(39, QT_TRANSLATE_NOOP("countries", "Italy"), "it");
			countries_.emplace_back(40, QT_TRANSLATE_NOOP("countries", "Romania"), "ro");
			countries_.emplace_back(41, QT_TRANSLATE_NOOP("countries", "Switzerland"), "ch");
			countries_.emplace_back(423, QT_TRANSLATE_NOOP("countries", "Liechtenstein"), "li");
			countries_.emplace_back(420, QT_TRANSLATE_NOOP("countries", "Czech Republic"), "cz");
			countries_.emplace_back(421, QT_TRANSLATE_NOOP("countries", "Slovakia"), "sk");
			countries_.emplace_back(43, QT_TRANSLATE_NOOP("countries", "Austria"), "at");
			countries_.emplace_back(44, QT_TRANSLATE_NOOP("countries", "United Kingdom"), "gb");
			countries_.emplace_back(45, QT_TRANSLATE_NOOP("countries", "Denmark"), "dk");
			countries_.emplace_back(46, QT_TRANSLATE_NOOP("countries", "Sweden"), "se");
			countries_.emplace_back(47, QT_TRANSLATE_NOOP("countries", "Norway"), "no");
			countries_.emplace_back(48, QT_TRANSLATE_NOOP("countries", "Poland"), "pl");
			countries_.emplace_back(49, QT_TRANSLATE_NOOP("countries", "Germany"), "de");
			countries_.emplace_back(500, QT_TRANSLATE_NOOP("countries", "Falkland Islands"), "fk");
			countries_.emplace_back(501, QT_TRANSLATE_NOOP("countries", "Belize"), "bz");
			countries_.emplace_back(502, QT_TRANSLATE_NOOP("countries", "Guatemala"), "gt");
			countries_.emplace_back(503, QT_TRANSLATE_NOOP("countries", "El Salvador"), "sv");
			countries_.emplace_back(504, QT_TRANSLATE_NOOP("countries", "Honduras"), "hn");
			countries_.emplace_back(505, QT_TRANSLATE_NOOP("countries", "Nicaragua"), "ni");
			countries_.emplace_back(506, QT_TRANSLATE_NOOP("countries", "Costa Rica"), "cr");
			countries_.emplace_back(507, QT_TRANSLATE_NOOP("countries", "Panama"), "pa");
            countries_.emplace_back(508, QT_TRANSLATE_NOOP("countries", "Saint Pierre and Miquelon"), "pm");
			countries_.emplace_back(509, QT_TRANSLATE_NOOP("countries", "Haiti"), "ht");
			countries_.emplace_back(51, QT_TRANSLATE_NOOP("countries", "Peru"), "pe");
			countries_.emplace_back(52, QT_TRANSLATE_NOOP("countries", "Mexico"), "mx");
			countries_.emplace_back(53, QT_TRANSLATE_NOOP("countries", "Cuba"), "cu");
			countries_.emplace_back(54, QT_TRANSLATE_NOOP("countries", "Argentina"), "ar");
			countries_.emplace_back(55, QT_TRANSLATE_NOOP("countries", "Brazil"), "br");
			countries_.emplace_back(56, QT_TRANSLATE_NOOP("countries", "Chile, Republic of"), "cl");
			countries_.emplace_back(57, QT_TRANSLATE_NOOP("countries", "Colombia"), "co");
			countries_.emplace_back(58, QT_TRANSLATE_NOOP("countries", "Venezuela"), "ve");
			countries_.emplace_back(590, QT_TRANSLATE_NOOP("countries", "Guadeloupe"), "gp");
			countries_.emplace_back(590, QT_TRANSLATE_NOOP("countries", "Antilles"), "an");
			countries_.emplace_back(591, QT_TRANSLATE_NOOP("countries", "Bolivia"), "bo");
			countries_.emplace_back(592, QT_TRANSLATE_NOOP("countries", "Guyana"), "gy");
			countries_.emplace_back(593, QT_TRANSLATE_NOOP("countries", "Ecuador"), "ec");
			countries_.emplace_back(594, QT_TRANSLATE_NOOP("countries", "French Guiana"), "gf");
			countries_.emplace_back(595, QT_TRANSLATE_NOOP("countries", "Paraguay"), "py");
			countries_.emplace_back(596, QT_TRANSLATE_NOOP("countries", "Martinique"), "mq");
			countries_.emplace_back(597, QT_TRANSLATE_NOOP("countries", "Suriname"), "sr");
			countries_.emplace_back(598, QT_TRANSLATE_NOOP("countries", "Uruguay"), "uy");
			countries_.emplace_back(599, QT_TRANSLATE_NOOP("countries", "Netherlands Antilles"), "an");
			countries_.emplace_back(60, QT_TRANSLATE_NOOP("countries", "Malaysia"), "my");
			countries_.emplace_back(61, QT_TRANSLATE_NOOP("countries", "Australia"), "au");
            countries_.emplace_back(61, QT_TRANSLATE_NOOP("countries", "Christmas Island"), "cx");
			countries_.emplace_back(61, QT_TRANSLATE_NOOP("countries", "Cocos Islands"), "cc");
			countries_.emplace_back(62, QT_TRANSLATE_NOOP("countries", "Indonesia"), "id");
			countries_.emplace_back(63, QT_TRANSLATE_NOOP("countries", "Philippines"), "ph");
			countries_.emplace_back(64, QT_TRANSLATE_NOOP("countries", "New Zealand"), "nz");
			countries_.emplace_back(65, QT_TRANSLATE_NOOP("countries", "Singapore"), "sg");
			countries_.emplace_back(66, QT_TRANSLATE_NOOP("countries", "Thailand"), "th");
			countries_.emplace_back(670, QT_TRANSLATE_NOOP("countries", "East Timor"), "TL");
			countries_.emplace_back(672, QT_TRANSLATE_NOOP("countries", "Norfolk Island"), "nf");
			countries_.emplace_back(673, QT_TRANSLATE_NOOP("countries", "Brunei"), "bn");
			countries_.emplace_back(674, QT_TRANSLATE_NOOP("countries", "Nauru"), "nr");
			countries_.emplace_back(675, QT_TRANSLATE_NOOP("countries", "Papua New Guinea"), "pg");
			countries_.emplace_back(676, QT_TRANSLATE_NOOP("countries", "Tonga"), "to");
			countries_.emplace_back(677, QT_TRANSLATE_NOOP("countries", "Solomon Islands"), "sb");
			countries_.emplace_back(678, QT_TRANSLATE_NOOP("countries", "Vanuatu"), "vu");
			countries_.emplace_back(679, QT_TRANSLATE_NOOP("countries", "Fiji"), "fj");
			countries_.emplace_back(680, QT_TRANSLATE_NOOP("countries", "Palau"), "pw");
			countries_.emplace_back(681, QT_TRANSLATE_NOOP("countries", "Wallis and Futuna Islands"), "wf");
			countries_.emplace_back(682, QT_TRANSLATE_NOOP("countries", "Cook Islands"), "ck");
			countries_.emplace_back(683, QT_TRANSLATE_NOOP("countries", "Niue"), "nu");
			countries_.emplace_back(685, QT_TRANSLATE_NOOP("countries", "Samoa"), "ws");
			countries_.emplace_back(686, QT_TRANSLATE_NOOP("countries", "Kiribati"), "ki");
			countries_.emplace_back(687, QT_TRANSLATE_NOOP("countries", "New Caledonia"), "nc");
			countries_.emplace_back(688, QT_TRANSLATE_NOOP("countries", "Tuvalu"), "tv");
			countries_.emplace_back(689, QT_TRANSLATE_NOOP("countries", "French Polynesia"), "pf");
			countries_.emplace_back(690, QT_TRANSLATE_NOOP("countries", "Tokelau"), "tk");
			countries_.emplace_back(691, QT_TRANSLATE_NOOP("countries", "Federated States of Micronesia"), "fm");
			countries_.emplace_back(692, QT_TRANSLATE_NOOP("countries", "Marshall Islands"), "mh");
			countries_.emplace_back(7, QT_TRANSLATE_NOOP("countries", "Kazakhstan"), "kz");
            countries_.emplace_back(7, QT_TRANSLATE_NOOP("countries", "Russia"), "ru");
			countries_.emplace_back(81, QT_TRANSLATE_NOOP("countries", "Japan"), "jp");
			countries_.emplace_back(82, QT_TRANSLATE_NOOP("countries", "South Korea"), "kr");
			countries_.emplace_back(84, QT_TRANSLATE_NOOP("countries", "Vietnam"), "vn");
            countries_.emplace_back(850, QT_TRANSLATE_NOOP("countries", "North Korea (DPRK)"), "kp");
			countries_.emplace_back(852, QT_TRANSLATE_NOOP("countries", "Hong Kong"), "hk");
			countries_.emplace_back(853, QT_TRANSLATE_NOOP("countries", "Macau"), "mo");
			countries_.emplace_back(855, QT_TRANSLATE_NOOP("countries", "Cambodia"), "kh");
            countries_.emplace_back(856, QT_TRANSLATE_NOOP("countries", "Lao People's Democratic Republic"), "la");
			countries_.emplace_back(86, QT_TRANSLATE_NOOP("countries", "China"), "cn");
			countries_.emplace_back(880, QT_TRANSLATE_NOOP("countries", "Bangladesh"), "bd");
			countries_.emplace_back(886, QT_TRANSLATE_NOOP("countries", "Taiwan"), "tw");
			countries_.emplace_back(90, QT_TRANSLATE_NOOP("countries", "Turkey"), "tr");
			countries_.emplace_back(91, QT_TRANSLATE_NOOP("countries", "India"), "in");
			countries_.emplace_back(92, QT_TRANSLATE_NOOP("countries", "Pakistan"), "pk");
			countries_.emplace_back(93, QT_TRANSLATE_NOOP("countries", "Afghanistan"), "af");
			countries_.emplace_back(94, QT_TRANSLATE_NOOP("countries", "Sri Lanka"), "lk");
			countries_.emplace_back(95, QT_TRANSLATE_NOOP("countries", "Myanmar"), "mm");
			countries_.emplace_back(960, QT_TRANSLATE_NOOP("countries", "Maldives"), "mv");
			countries_.emplace_back(961, QT_TRANSLATE_NOOP("countries", "Lebanon"), "lb");
			countries_.emplace_back(962, QT_TRANSLATE_NOOP("countries", "Jordan"), "jo");
			countries_.emplace_back(963, QT_TRANSLATE_NOOP("countries", "Syrian Arab Republic"), "sy");
			countries_.emplace_back(964, QT_TRANSLATE_NOOP("countries", "Iraq"), "iq");
			countries_.emplace_back(965, QT_TRANSLATE_NOOP("countries", "Kuwait"), "kw");
			countries_.emplace_back(966, QT_TRANSLATE_NOOP("countries", "Saudi Arabia"), "sa");
			countries_.emplace_back(967, QT_TRANSLATE_NOOP("countries", "Yemen"), "ye");
			countries_.emplace_back(968, QT_TRANSLATE_NOOP("countries", "Oman"), "om");
			countries_.emplace_back(971, QT_TRANSLATE_NOOP("countries", "United Arab Emirates"), "ae");
			countries_.emplace_back(972, QT_TRANSLATE_NOOP("countries", "Israel"), "il");
			countries_.emplace_back(973, QT_TRANSLATE_NOOP("countries", "Bahrain"), "bh");
			countries_.emplace_back(974, QT_TRANSLATE_NOOP("countries", "Qatar"), "qa");
			countries_.emplace_back(975, QT_TRANSLATE_NOOP("countries", "Bhutan"), "bt");
			countries_.emplace_back(976, QT_TRANSLATE_NOOP("countries", "Mongolia"), "mn");
			countries_.emplace_back(977, QT_TRANSLATE_NOOP("countries", "Nepal"), "np");
			countries_.emplace_back(98, QT_TRANSLATE_NOOP("countries", "Iran, Islamic Republic of"), "ir");
            countries_.emplace_back(992, QT_TRANSLATE_NOOP("countries", "Tajikistan"), "tj");
            countries_.emplace_back(993, QT_TRANSLATE_NOOP("countries", "Turkmenistan"), "tm");
            countries_.emplace_back(994, QT_TRANSLATE_NOOP("countries", "Azerbaijan"), "az");
            countries_.emplace_back(995, QT_TRANSLATE_NOOP("countries", "Georgia"), "ge");
            countries_.emplace_back(996, QT_TRANSLATE_NOOP("countries", "Kyrgyzstan"), "kg");
            countries_.emplace_back(998, QT_TRANSLATE_NOOP("countries", "Uzbekistan"), "uz");
		}

		const countries_list& get()
		{
			if (countries_.empty())
				init(countries_);

			return countries_;
		}
	}

}

